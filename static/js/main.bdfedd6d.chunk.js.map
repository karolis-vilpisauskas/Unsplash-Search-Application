{"version":3,"sources":["store/reducers/imageReducer.js","store/reducers/queryReducer.js","store/reducers/loaderReducer.js","store/reducers/index.js","store/actions/types.js","store/store.js","store/actions/queryActions.js","layout/Header/Header.js","layout/Footer/Footer.js","store/actions/imageActions.js","store/actions/loaderActions.js","components/ListItem/ListItem.js","components/List/List.js","layout/Sidebar/Sidebar.js","components/ProgressBar/ProgressBar.js","components/GridItem/GridItem.js","components/Button/Button.js","components/Grid/Grid.js","layout/Content/Content.js","components/Input/Input.js","layout/Search/Search.js","layout/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["initialState","page","items","item","JSON","parse","sessionStorage","getItem","active","combineReducers","images","state","action","type","payload","queries","computedItems","setItem","stringify","splicedItems","splice","loader","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setQuery","query","dispatch","Header","useDispatch","useSelector","className","id","onClick","checked","Footer","promiseTimeout","time","result","Promise","resolve","setTimeout","searchImages","keyword","axios","get","then","res","data","results","ListItem","index","deleteQuery","List","queryItems","map","i","key","length","Sidebar","isActive","ProgressBar","style","GridItem","title","src","url","backgroundImage","href","target","rel","Button","label","Grid","useState","grid","opacity","transform","bar","loadingStyle","setLoadingStyle","useEffect","opacityIndex","transformIndex","ifImages","gridItems","image","urls","full","small","description","counter","path","Content","Input","change","name","placeholder","value","onChange","e","Search","Main","App","Boolean","window","location","hostname","match","defaults","baseURL","headers","common","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdfedd6d.chunk.js","sourcesContent":["import {\r\n\tFETCH_IMAGES,\r\n\tSEARCH_IMAGES,\r\n\tLOAD_MORE_IMAGES\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\tpage: 2,\r\n\titems: [],\r\n\titem: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_IMAGES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: action.payload,\r\n\t\t\t\tpage: 2\r\n\t\t\t};\r\n\t\tcase SEARCH_IMAGES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: action.payload,\r\n\t\t\t\tpage: 2\r\n\t\t\t};\r\n\t\tcase LOAD_MORE_IMAGES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: [...state.items, ...action.payload],\r\n\t\t\t\tpage: state.page + 1\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { SAVE_QUERY, SET_QUERY, DELETE_QUERY, TOGGLE_QUERIES } from \"../actions/types\";\r\n\r\nconst storage = JSON.parse(sessionStorage.getItem(\"queries\")) || [];\r\n\r\nconst initialState = {\r\n\titems: storage,\r\n\titem: \"\",\r\n\tactive: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SAVE_QUERY:\r\n\t\t\tconst computedItems = [...state.items, state.item];\r\n\t\t\tsessionStorage.setItem(\"queries\", JSON.stringify(computedItems));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: computedItems\r\n\t\t\t};\r\n\t\tcase SET_QUERY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titem: action.payload\r\n\t\t\t};\r\n\t\tcase DELETE_QUERY:\r\n\t\t\tconst splicedItems = [...state.items];\r\n\t\t\tsplicedItems.splice(action.payload, 1);\r\n\t\t\tsessionStorage.setItem(\"queries\", JSON.stringify(splicedItems));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: splicedItems\r\n\t\t\t};\r\n\t\tcase TOGGLE_QUERIES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive: !state.active\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { START_LOADER, STOP_LOADER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\tactive: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase START_LOADER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive: true\r\n\t\t\t};\r\n\t\tcase STOP_LOADER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive: false\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport imageReducer from \"./imageReducer\";\r\nimport queryReducer from \"./queryReducer\";\r\nimport loaderReducer from \"./loaderReducer\";\r\n\r\nexport default combineReducers({\r\n\timages: imageReducer,\r\n\tqueries: queryReducer,\r\n\tloader: loaderReducer\r\n});\r\n","export const FETCH_IMAGES = \"FETCH_IMAGES\";\r\nexport const SEARCH_IMAGES = \"SEARCH_IMAGES\";\r\nexport const LOAD_MORE_IMAGES = \"LOAD_MORE_IMAGES\";\r\nexport const SAVE_QUERY = \"SAVE_QUERY\";\r\nexport const SET_QUERY = \"SET_QUERY\";\r\nexport const DELETE_QUERY = \"DELETE_QUERY\";\r\nexport const TOGGLE_QUERIES = \"TOGGLE_QUERIES\";\r\nexport const START_LOADER = \"START_LOADER\";\r\nexport const STOP_LOADER = \"STOP_LOADER\";\r\n","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcompose(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import { SAVE_QUERY, SET_QUERY, DELETE_QUERY, TOGGLE_QUERIES } from \"./types\";\r\n\r\nexport const setQuery = query => dispatch => {\r\n\tdispatch({ type: SET_QUERY, payload: query });\r\n};\r\n\r\nexport const saveQuery = () => dispatch => {\r\n\tdispatch({ type: SAVE_QUERY });\r\n};\r\n\r\nexport const deleteQuery = index => dispatch => {\r\n\tdispatch({ type: DELETE_QUERY, payload: index });\r\n};\r\n\r\nexport const toggleQueries = () => dispatch => {\r\n\tdispatch({ type: TOGGLE_QUERIES });\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleQueries } from \"../../store/actions/queryActions\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst active = useSelector(state => state.queries.active);\r\n\r\n\tconst dispatchToggle = () => {\r\n\t\tdispatch(toggleQueries());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1>Unsplash Image Search.</h1>\r\n\t\t\t\t<div id='menuToggle' onClick={dispatchToggle}>\r\n\t\t\t\t\t<input type='checkbox' checked={active} />\r\n\t\t\t\t\t<span></span>\r\n\t\t\t\t\t<span></span>\r\n\t\t\t\t\t<span></span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className='footer'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h5>© 2019 All Rights Reserved</h5>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import { FETCH_IMAGES, SEARCH_IMAGES, LOAD_MORE_IMAGES } from \"./types\";\r\nimport { startLoader, stopLoader } from \"./loaderActions\";\r\nimport axios from \"axios\";\r\n\r\nconst promiseTimeout = time => result =>\r\n\tnew Promise(resolve => setTimeout(resolve, time, result));\r\n\r\nexport const fetchImages = () => dispatch => {\r\n\tdispatch(startLoader());\r\n\taxios\r\n\t\t.get(\"/photos?page=1&per_page=12\")\r\n\t\t.then(promiseTimeout(800))\r\n\t\t.then(res => {\r\n\t\t\tdispatch({ type: FETCH_IMAGES, payload: res.data });\r\n\t\t\tdispatch(stopLoader());\r\n\t\t});\r\n};\r\n\r\nexport const searchImages = keyword => dispatch => {\r\n\tdispatch(startLoader());\r\n\taxios\r\n\t\t.get(`/search/photos?query=${keyword}&page=1&per_page=12`)\r\n\t\t.then(promiseTimeout(800))\r\n\t\t.then(res => {\r\n\t\t\tdispatch({ type: SEARCH_IMAGES, payload: res.data.results });\r\n\t\t\tdispatch(stopLoader());\r\n\t\t});\r\n};\r\n\r\nexport const loadMoreImages = (counter, keyword) => dispatch => {\r\n\tconst path =\r\n\t\tkeyword === \"\"\r\n\t\t\t? `/photos?page=${counter}&per_page=12`\r\n\t\t\t: `/search/photos?query=${keyword}&page=${counter}&per_page=12`;\r\n\r\n\taxios.get(path).then(res => {\r\n\t\tconst data = keyword === \"\" ? res.data : res.data.results;\r\n\t\tdispatch({\r\n\t\t\ttype: LOAD_MORE_IMAGES,\r\n\t\t\tpayload: data\r\n\t\t});\r\n\t});\r\n};\r\n","import { START_LOADER, STOP_LOADER } from \"./types\";\r\n\r\nexport const startLoader = () => dispatch => {\r\n\tdispatch({ type: START_LOADER });\r\n};\r\n\r\nexport const stopLoader = () => dispatch => {\r\n\tdispatch({ type: STOP_LOADER });\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteQuery, setQuery, toggleQueries } from \"../../store/actions/queryActions\";\r\nimport { searchImages } from \"../../store/actions/imageActions\";\r\nimport \"./ListItem.scss\";\r\n\r\nconst ListItem = ({ keyword, index }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst dispatchDeleteQuery = () => {\r\n\t\tdispatch(deleteQuery(index));\r\n\t};\r\n\r\n\tconst submitQuery = () => {\r\n\t\tdispatch(setQuery(keyword));\r\n\t\tdispatch(toggleQueries());\r\n\t\tdispatch(searchImages(keyword));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='list-item'>\r\n\t\t\t<div onClick={submitQuery}>{keyword}</div>\r\n\t\t\t<div onClick={dispatchDeleteQuery} className='delete-list-item'>\r\n\t\t\t\t<span>x</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./List.scss\";\r\n\r\nimport ListItem from \"../ListItem\";\r\n\r\nconst List = () => {\r\n\tconst queries = useSelector(state => state.queries.items);\r\n\r\n\tconst queryItems = queries.map((query, i) => {\r\n\t\treturn <ListItem keyword={query} key={i} index={i} />;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='list'>\r\n\t\t\t<h3>Saved Searches</h3>\r\n\t\t\t{queries.length !== 0 ? queryItems : <p>No saved queries</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Sidebar.scss\";\r\n\r\nimport List from \"../../components/List\";\r\n\r\nconst Sidebar = () => {\r\n\tconst active = useSelector(state => state.queries.active);\r\n\tconst isActive = active ? 'is-active' : '';\r\n\t\r\n\treturn (\r\n\t\t<div className={`${isActive} sidebar`}>\r\n\t\t\t<div className='list-wrapper'>\r\n\t\t\t\t<List />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./ProgressBar.scss\";\r\n\r\nconst ProgressBar = ({ style }) => {\r\n\treturn (\r\n\t\t<div className='progressbar-wrapper' style={style}>\r\n\t\t\t<div className='progressbar'>\r\n\t\t\t\t<div className='progress-style'></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport \"./GridItem.scss\";\r\n\r\nconst GridItem = ({ title, src, url }) => {\r\n\tconst style = {\r\n\t\tbackgroundImage: `url(${src})`\r\n\t};\r\n\r\n\treturn (\r\n\t\t<a\r\n\t\t\thref={url}\r\n\t\t\ttarget='_blank'\r\n\t\t\trel='noopener noreferrer'\r\n\t\t\tclassName='image-grid-item'\r\n\t\t>\r\n\t\t\t<div className='grid-item-wrapper'>\r\n\t\t\t\t<div className='image' style={style}>\r\n\t\t\t\t\t<div className='image-title'>\r\n\t\t\t\t\t\t<p>{title}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\nexport default GridItem;\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nconst Button = ({ type, label, action }) => {\r\n\treturn (\r\n\t\t<button className='button' type={type} onClick={action}>\r\n\t\t\t{label}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchImages, loadMoreImages } from \"../../store/actions/imageActions\";\r\nimport \"./Grid.scss\";\r\n\r\nimport Bar from \"../ProgressBar\";\r\nimport GridItem from \"../GridItem\";\r\nimport Button from \"../Button\";\r\n\r\nconst Grid = () => {\r\n\tconst [loadingStyle, setLoadingStyle] = useState({\r\n\t\tgrid: { opacity: 1, transform: \"translateY(0)\" },\r\n\t\tbar: { opacity: 0, transform: \"translateY(-20px)\" }\r\n\t});\r\n\r\n\tconst page = useSelector(state => state.images.page);\r\n\tconst images = useSelector(state => state.images.items);\r\n\tconst loader = useSelector(state => state.loader.active);\r\n\tconst query = useSelector(state => state.queries.item);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchImages());\r\n\t\treturn;\r\n\t}, [dispatch]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst opacityIndex = loader ? [0, 1] : [1, 0];\r\n\t\tconst transformIndex = loader ? [\"-20px\", 0] : [0, \"-20px\"];\r\n\t\tsetLoadingStyle({\r\n\t\t\tgrid: {\r\n\t\t\t\topacity: opacityIndex[0],\r\n\t\t\t\ttransform: `translateY(${transformIndex[0]})`\r\n\t\t\t},\r\n\t\t\tbar: {\r\n\t\t\t\topacity: opacityIndex[1],\r\n\t\t\t\ttransform: `translateY(${transformIndex[1]})`\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn;\r\n\t}, [loader]);\r\n\r\n\tconst loadMore = () => {\r\n\t\tdispatch(loadMoreImages(page, query));\r\n\t};\r\n\r\n\tconst ifImages = typeof images !== \"undefined\" && images.length > 0;\r\n\tconst gridItems = images.map(image => {\r\n\t\treturn (\r\n\t\t\t<GridItem\r\n\t\t\t\turl={image.urls.full}\r\n\t\t\t\tkey={image.id}\r\n\t\t\t\tsrc={image.urls.small}\r\n\t\t\t\ttitle={image.description}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='w-100 text-center'>\r\n\t\t\t<Bar style={loadingStyle.bar} />\r\n\t\t\t<div className='image-grid' style={loadingStyle.grid}>\r\n\t\t\t\t{ifImages ? (\r\n\t\t\t\t\tgridItems\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<h2>Oops! No images have been found.</h2>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{ifImages && images.length >= 9 ? (\r\n\t\t\t\t<Button label='Load More' type='button' action={loadMore} />\r\n\t\t\t) : (\r\n\t\t\t\t\"\"\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport \"./Content.scss\";\r\n\r\nimport Grid from \"../../components/Grid\";\r\n\r\nconst Content = () => {\r\n\treturn (\r\n\t\t<div className='content'>\r\n\t\t\t<Grid />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport \"./Input.scss\";\r\n\r\nconst Input = ({ type, change, name, placeholder, value }) => {\r\n\tconst onChange = e => {\r\n\t\tchange(e);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='input-outter'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='input'\r\n\t\t\t\ttype={type}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tname={name}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tvalue={value}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveQuery, setQuery } from \"../../store/actions/queryActions\";\r\nimport { searchImages } from \"../../store/actions/imageActions\";\r\nimport \"./Search.scss\";\r\n\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\n\r\nconst Search = () => {\r\n\tconst value = useSelector(state => state.queries.item);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst dispatchSaveQuery = () => {\r\n\t\tdispatch(saveQuery());\r\n\t};\r\n\r\n\tconst dispatchSearchImages = () => {\r\n\t\tdispatch(searchImages(value));\r\n\t};\r\n\r\n\tconst dispatchSetQuery = e => {\r\n\t\tdispatch(setQuery(e.target.value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='search-wrapper'>\r\n\t\t\t<div className='input-wrapper'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='query'\r\n\t\t\t\t\tplaceholder='Search Unsplash...'\r\n\t\t\t\t\tchange={dispatchSetQuery}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='button-wrapper'>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tlabel='Search'\r\n\t\t\t\t\taction={dispatchSearchImages}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button type='button' action={dispatchSaveQuery} label='Save' />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./Main.scss\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Content from \"../Content\";\r\nimport Search from \"../Search\";\r\n\r\nconst Main = () => {\r\n\treturn (\r\n\t\t<section className='main'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Search />\r\n\t\t\t</div>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Content />\r\n\t\t\t\t<Sidebar />\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\nimport Main from \"./layout/Main\";\n\nconst App = () => {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Header />\n\t\t\t<Main />\n\t\t\t<Footer />\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport axios from \"axios\";\nimport \"./scss/base.scss\";\n\naxios.defaults.baseURL = \"https://api.unsplash.com\";\naxios.defaults.headers.common[\"Authorization\"] =\n\t\"Client-ID f3b520ccaeb4cd40c603ad9d88ebe88fa42f049ac42e5c4b5f95b0f4f8d15379\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}