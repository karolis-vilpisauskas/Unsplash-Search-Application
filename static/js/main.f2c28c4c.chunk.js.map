{"version":3,"sources":["store/reducers/imageReducer.js","store/reducers/queryReducer.js","store/reducers/index.js","store/actions/types.js","store/store.js","layout/Header/Header.js","layout/Footer/Footer.js","store/actions/imageActions.js","components/ListItem/ListItem.js","store/actions/queryActions.js","components/List/List.js","layout/Sidebar/Sidebar.js","components/ProgressBar/ProgressBar.js","components/GridItem/GridItem.js","components/Grid/Grid.js","layout/Content/Content.js","components/Button/Button.js","components/Input/Input.js","layout/Search/Search.js","layout/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","item","combineReducers","images","state","action","type","payload","queries","itemDeleted","splice","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","Header","className","Footer","searchImages","keyword","dispatch","console","log","axios","get","then","res","data","ListItem","label","index","useDispatch","onClick","deleteQuery","List","useSelector","queryItems","map","query","i","key","length","Sidebar","ProgressBar","GridItem","title","src","url","style","backgroundImage","href","target","rel","Grid","useEffect","gridItems","image","id","thumbnailUrl","Content","Button","Input","setValue","name","placeholder","value","onChange","e","Search","useState","Main","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2c28c4c.chunk.js","sourcesContent":["import { FETCH_IMAGES, SEARCH_IMAGES } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\titems: [],\r\n\titem: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_IMAGES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: action.payload\r\n\t\t\t};\r\n\t\tcase SEARCH_IMAGES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { SAVE_QUERY, SET_QUERY, DELETE_QUERY } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\titems: [],\r\n\titem: \"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SAVE_QUERY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: [...state.items, state.item]\r\n\t\t\t};\r\n\t\tcase SET_QUERY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titem: action.payload\r\n\t\t\t};\r\n\t\tcase DELETE_QUERY:\r\n\t\t\tconst itemDeleted = [...state.items];\r\n\t\t\titemDeleted.splice(action.payload, 1);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: itemDeleted\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport imageReducer from \"./imageReducer\";\r\nimport queryReducer from \"./queryReducer\";\r\n\r\nexport default combineReducers({\r\n\timages: imageReducer,\r\n\tqueries: queryReducer\r\n});\r\n","export const FETCH_IMAGES = \"FETCH_IMAGES\";\r\nexport const SEARCH_IMAGES = \"SEARCH_IMAGES\";\r\nexport const SAVE_QUERY = \"SAVE_QUERY\";\r\nexport const SET_QUERY = \"SET_QUERY\";\r\nexport const DELETE_QUERY = \"DELETE_QUERY\";\r\n","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcompose(\r\n\t\tapplyMiddleware(...middleware),\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t)\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<h3>Unsplash Image Search</h3>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className='footer'>\r\n\t\t\t<h5>Â© 2019 All Rights Reserved</h5>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import { FETCH_IMAGES, SEARCH_IMAGES } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchImages = () => dispatch => {\r\n\taxios\r\n\t\t.get(\"https://jsonplaceholder.typicode.com/photos?_limit=15\")\r\n\t\t.then(res => {\r\n\t\t\tdispatch({ type: FETCH_IMAGES, payload: res.data });\r\n\t\t});\r\n};\r\n\r\nexport const searchImages = keyword => dispatch => {\r\n\tconsole.log(keyword);\r\n\taxios\r\n\t\t.get(`https://jsonplaceholder.typicode.com/photos?_limit=5`)\r\n\t\t.then(res => {\r\n\t\t\tdispatch({ type: SEARCH_IMAGES, payload: res.data });\r\n\t\t});\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteQuery } from \"../../store/actions/queryActions\";\r\nimport { searchImages } from \"../../store/actions/imageActions\";\r\nimport \"./ListItem.scss\";\r\n\r\nconst ListItem = ({ label, index }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst delQuery = () => {\r\n\t\tdispatch(deleteQuery(index));\r\n\t};\r\n\r\n\tconst getImages = () => {\r\n\t\tdispatch(searchImages(label));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='list-item'>\r\n\t\t\t<div onClick={getImages}>{label}</div>\r\n\t\t\t<div onClick={delQuery} className='delete-list-item'>\r\n\t\t\t\t<span>x</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ListItem;\r\n","import { SAVE_QUERY, SET_QUERY, DELETE_QUERY } from \"./types\";\r\n\r\nexport const setQuery = query => dispatch => {\r\n\tdispatch({ type: SET_QUERY, payload: query });\r\n};\r\n\r\nexport const saveQuery = () => dispatch => {\r\n\tdispatch({ type: SAVE_QUERY });\r\n};\r\n\r\nexport const deleteQuery = index => dispatch => {\r\n\tdispatch({ type: DELETE_QUERY, payload: index });\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./List.scss\";\r\n\r\nimport ListItem from \"../ListItem\";\r\n\r\nconst List = () => {\r\n\tconst queries = useSelector(state => state.queries.items);\r\n\r\n\r\n\tconst queryItems = queries.map((query, i) => {\r\n\t\treturn <ListItem label={query} key={i} index={i}/>;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='list'>\r\n\t\t\t<h3>Saved Searches</h3>\r\n\t\t\t{queries.length !== 0 ? queryItems : <p>No saved queries</p>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport \"./Sidebar.scss\";\r\n\r\nimport List from \"../../components/List\";\r\n\r\nconst Sidebar = () => {\r\n\treturn (\r\n\t\t<div className='sidebar'>\r\n\t\t\t<div className='list-wrapper'>\r\n\t\t\t\t<List />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./ProgressBar.scss\";\r\n\r\nconst ProgressBar = () => {\r\n\treturn (\r\n\t\t<div className='progressbar-wrapper'>\r\n\t\t\t<div className='progressbar'>\r\n\t\t\t\t<div className='progress-style'></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport \"./GridItem.scss\";\r\n\r\nconst GridItem = ({ title, src, url }) => {\r\n\tconst style = {\r\n\t\tbackgroundImage: `url(${src})`\r\n\t};\r\n\r\n\treturn (\r\n\t\t<a\r\n\t\t\thref={url}\r\n\t\t\ttarget='_blank'\r\n\t\t\trel='noopener noreferrer'\r\n\t\t\tclassName='image-grid-item'\r\n\t\t>\r\n\t\t\t<div className='grid-item-wrapper'>\r\n\t\t\t\t<div className='image' style={style}>\r\n\t\t\t\t\t<div className='image-title'>\r\n\t\t\t\t\t\t<p>{title}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\nexport default GridItem;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchImages } from \"../../store/actions/imageActions\";\r\nimport \"./Grid.scss\";\r\n\r\nimport Bar from \"../ProgressBar\";\r\nimport GridItem from \"../GridItem\";\r\n\r\nconst Grid = () => {\r\n\tconst images = useSelector(state => state.images.items);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchImages());\r\n\t\treturn;\r\n\t}, [dispatch]);\r\n\r\n\tconst gridItems = images.map(image => {\r\n\t\treturn (\r\n\t\t\t<GridItem\r\n\t\t\t\turl={image.url}\r\n\t\t\t\tkey={image.id}\r\n\t\t\t\tsrc={image.thumbnailUrl}\r\n\t\t\t\ttitle={image.title}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='w-100'>\r\n\t\t\t<Bar />\r\n\t\t\t<div className='image-grid'>{gridItems}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport \"./Content.scss\";\r\n\r\nimport Grid from \"../../components/Grid\";\r\n\r\nconst Content = () => {\r\n\treturn (\r\n\t\t<div className='content'>\r\n\t\t\t<Grid />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nconst Button = ({ type, label, action }) => {\r\n\tconst onClick = () => {\r\n\t\taction();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<button className='button' type={type} onClick={onClick}>\r\n\t\t\t{label}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./Input.scss\";\r\n\r\nconst Input = ({ type, setValue, name, placeholder, value }) => {\r\n\tconst onChange = e => {\r\n\t\tsetValue(e);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"input-outter\">\r\n\t\t\t<input\r\n\t\t\t\tclassName='input'\r\n\t\t\t\ttype={type}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tname={name}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tvalue={value}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveQuery, setQuery } from \"../../store/actions/queryActions\";\r\nimport { searchImages } from '../../store/actions/imageActions';\r\nimport \"./Search.scss\";\r\n\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\n\r\nconst Search = () => {\r\n    const [value, setValue] = useState(\"\");\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onClick = () => {\r\n\t\tdispatch(saveQuery());\r\n\t};\r\n\r\n\tconst onSearch = () => {\r\n\t\tdispatch(searchImages(value));\r\n\t}\r\n\r\n\tconst onChange = e => {\r\n\t\tsetValue(e.target.value);\r\n\t\tdispatch(setQuery(e.target.value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='search-wrapper'>\r\n\t\t\t<div className='input-wrapper'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='query'\r\n\t\t\t\t\tplaceholder='Search Unsplash...'\r\n\t\t\t\t\tsetValue={onChange}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='button-wrapper'>\r\n\t\t\t\t<Button type='button' label='Search' action={onSearch} />\r\n\t\t\t\t<Button type='button' action={onClick} label='Save' />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./Main.scss\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Content from \"../Content\";\r\nimport Search from \"../Search\";\r\n\r\nconst Main = () => {\r\n\treturn (\r\n\t\t<section className='main'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Search />\r\n\t\t\t</div>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<Content />\r\n\t\t\t\t<Sidebar />\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\nimport Main from \"./layout/Main\";\n\nconst App = () => {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Header />\n\t\t\t<Main />\n\t\t\t<Footer />\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './scss/base.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}